---
// Optional: make this dynamic
import lemonCocktail from "@assets/lemon-cocktail.jpg";
const cards = [
  {
    title: "Card Title 1",
    description: "Lorem ipsum dolor sit amet consectetur adipisicing elit...",
    image: lemonCocktail,
  },
  {
    title: "Card Title 2",
    description: "Eum fuga laborum quos expedita iste saepe similique...",
    image: lemonCocktail,
  },
  {
    title: "Card Title 3",
    description: "Unde possimus quia at magnam sed cupiditate...",
    image: lemonCocktail,
  },
];
---

<style>
  .section {
    margin-top: 70px;
    position: relative;
    width: 100%;
    background: #f4f4f4;
    /* Total height = enough to scroll through all cards */
    min-height: calc(300px * 3 + 100vh); /* Adjust as needed */
    padding: 2rem 0;
  }

  .layout {
    display: flex;
    max-width: 1000px;
    margin: 0 auto;
  }

  .frozen-pane {
    width: 300px;
    padding: 2rem;
    background: #fff;
    position: sticky;
    top: 150px;
    align-self: flex-start;
    height: 500px;
    box-shadow: 2px 0 10px rgba(0, 0, 0, 0.05);
  }

  .scrolling-pane {
    flex: 1;
    padding: 2rem;
  }

  .cards {
    display: flex;
    flex-direction: column;
    gap: 40px;
    view-timeline-name: --cardsContainer;
  }

  .card {
    --target-brightness: 60%;
    height: 250px;
    background: white;
    border-radius: 12px;
    box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
    padding: 2rem;
    position: sticky;
    top: calc(var(--index, 1) * 30px);
    transform-origin: top center;
    animation: stacking linear forwards;
    animation-timeline: --cardsContainer;
    animation-range-start: exit-crossing
      calc((100% / var(--total-cards)) * (var(--index, 1) - 1));
    animation-range-end: exit-crossing
      calc((100% / var(--total-cards)) * var(--index, 1));
  }

  #card-1 {
    --index: 1;
  }
  #card-2 {
    --index: 2;
  }
 #card-3 {
  --index: 3;
  --target-brightness: 100%;
  top: 120px; /* Increase sticky top to stop earlier */
  animation-range-end: exit-crossing calc((100% / var(--total-cards)) * 2.5); /* Ends earlier */
}


  @keyframes stacking {
    to {
      transform: scale(calc(1 - 0.1 * (var(--total-cards) - var(--index))));
      filter: brightness(var(--target-brightness));
    }
  }

  .card__inner {
    display: flex;
    flex-direction: column;
    gap: 1rem;
  }

  .spacer--top {
    height: 150px;
  }

  .spacer--bottom {
    /* height: 300px; */
  }
</style>

<div class="section">
  <div class="layout">
    <div class="frozen-pane">
      <h2>Frozen Pane</h2>
      <p>This content stays in place while the cards scroll beside it.</p>
    </div>

    <div class="scrolling-pane">
      <div class="spacer spacer--top"></div>
      <div class="cards" style="--total-cards: 3">
        <div id="card-1" class="card">
          <div class="card__inner">
            <h1 class="card__title">Card 1</h1>
            <p class="card__description">Description for card 1...</p>
          </div>
        </div>
        <div id="card-2" class="card">
          <div class="card__inner">
            <h1 class="card__title">Card 2</h1>
            <p class="card__description">Description for card 2...</p>
          </div>
        </div>
        <div id="card-3" class="card">
          <div class="card__inner">
            <h1 class="card__title">Card 3</h1>
            <p class="card__description">Description for card 3...</p>
          </div>
        </div>
      </div>
      <div class="spacer spacer--bottom"></div>
    </div>
  </div>
  